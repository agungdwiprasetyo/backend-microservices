// Code generated by candi v1.3.1.

package usecase

import (
	"sync"
	tokenusecase "monorepo/services/auth-service/internal/modules/token/usecase"

	"pkg.agungdwiprasetyo.com/candi/codebase/factory/dependency"
)

type (
	// Usecase unit of work for all usecase in modules
	Usecase interface {
		Token() tokenusecase.TokenUsecase
	}

	usecaseUow struct {
		token tokenusecase.TokenUsecase
	}
)

var usecaseInst *usecaseUow
var once sync.Once

// SetSharedUsecase set singleton usecase unit of work instance
func SetSharedUsecase(deps dependency.Dependency) {
	once.Do(func() {
		usecaseInst = &usecaseUow{
			token: tokenusecase.NewTokenUsecase(deps),
		}
	})
}

// GetSharedUsecase get usecase unit of work instance
func GetSharedUsecase() Usecase {
	return usecaseInst
}
func (uc *usecaseUow) Token() tokenusecase.TokenUsecase {
	return uc.token
}
