// Code generated by candi v1.3.1.

package usecase

import (
	"context"

	"monorepo/services/user-service/pkg/shared/repository"

	"pkg.agungdp.dev/candi/codebase/factory/dependency"
	"pkg.agungdp.dev/candi/codebase/interfaces"
	"pkg.agungdp.dev/candi/tracer"
)

type authUsecaseImpl struct {
	cache interfaces.Cache

	repoMongo *repository.RepoMongo
}

// NewAuthUsecase usecase impl constructor
func NewAuthUsecase(deps dependency.Dependency) AuthUsecase {
	return &authUsecaseImpl{
		cache: deps.GetRedisPool().Cache(),

		repoMongo: repository.GetSharedRepoMongo(),
	}
}

func (uc *authUsecaseImpl) Hello(ctx context.Context) (msg string) {
	trace := tracer.StartTrace(ctx, "AuthUsecase:Hello")
	defer trace.Finish()
	ctx = trace.Context()

	msg, _ = uc.repoMongo.AuthRepo.FindHello(ctx)
	return
}
