// Code generated by candi v1.3.1.

package usecase

import (
	"context"

	"monorepo/services/user-service/pkg/shared/repository"

	"pkg.agungdwiprasetyo.com/candi/codebase/factory/dependency"
	"pkg.agungdwiprasetyo.com/candi/codebase/interfaces"
	"pkg.agungdwiprasetyo.com/candi/tracer"
)

type memberUsecaseImpl struct {
	cache interfaces.Cache
	
	repoMongo *repository.RepoMongo
}

// NewMemberUsecase usecase impl constructor
func NewMemberUsecase(deps dependency.Dependency) MemberUsecase {
	return &memberUsecaseImpl{
		cache: deps.GetRedisPool().Cache(),
		
		repoMongo: repository.GetSharedRepoMongo(),
	}
}

func (uc *memberUsecaseImpl) Hello(ctx context.Context) (msg string) {
	trace := tracer.StartTrace(ctx, "MemberUsecase:Hello")
	defer trace.Finish()
	ctx = trace.Context()

	
	msg, _ = uc.repoMongo.MemberRepo.FindHello(ctx)
	return
}	
