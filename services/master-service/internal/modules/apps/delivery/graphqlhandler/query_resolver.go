// Code generated by candi v1.4.0.

package graphqlhandler

import (
	"context"

	"pkg.agungdp.dev/candi/tracer"
)

type queryResolver struct {
	root *GraphQLHandler
}

// GetAll resolver
func (q *queryResolver) GetAll(ctx context.Context, input struct{ Filter *CommonFilter }) (results AppListResolver, err error) {
	trace := tracer.StartTrace(ctx, "AppsDeliveryGraphQL-GetAll")
	defer trace.Finish()
	ctx = trace.Context()

	if input.Filter == nil {
		input.Filter = new(CommonFilter)
	}
	filter := input.Filter.ToSharedFilter()
	data, meta, err := q.root.uc.FindAll(ctx, filter)
	if err != nil {
		return results, err
	}

	return AppListResolver{
		Meta: meta, Data: data,
	}, nil
}
