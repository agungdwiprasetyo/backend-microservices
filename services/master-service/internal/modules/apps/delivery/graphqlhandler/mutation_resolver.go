// Code generated by candi v1.8.18.

package graphqlhandler

import (
	"context"
	"monorepo/services/master-service/internal/modules/apps/domain"
	shareddomain "monorepo/services/master-service/pkg/shared/domain"

	"pkg.agungdp.dev/candi/tracer"
)

type mutationResolver struct {
	root *GraphQLHandler
}

// Save resolver
func (m *mutationResolver) Save(ctx context.Context, input struct{ Data shareddomain.Apps }) (string, error) {
	trace := tracer.StartTrace(ctx, "AppsDeliveryGraphQL:Save")
	defer trace.Finish()
	ctx = trace.Context()

	return "Success", m.root.uc.Save(ctx, &input.Data)
}

// SavePermissions resolver
func (m *mutationResolver) SavePermissions(ctx context.Context, input struct {
	AppID      string
	Permission domain.PermissionRequest
}) (string, error) {
	trace := tracer.StartTrace(ctx, "AppsDeliveryGraphQL:SavePermissions")
	defer trace.Finish()
	ctx = trace.Context()

	return "Success", m.root.uc.SaveAppsPermission(ctx, input.AppID, input.Permission)
}
