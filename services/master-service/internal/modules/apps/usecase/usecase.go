// Code generated by candi v1.4.0.

package usecase

import (
	"context"
	"monorepo/services/master-service/internal/modules/apps/domain"
	shareddomain "monorepo/services/master-service/pkg/shared/domain"

	"pkg.agungdp.dev/candi/candishared"
)

// AppsUsecase abstraction
type AppsUsecase interface {
	FindAll(ctx context.Context, filter domain.FilterApps) (data []shareddomain.Apps, meta candishared.Meta, err error)
	GetDetailApp(ctx context.Context, appID string) (data domain.AppDetail, err error)
	Save(ctx context.Context, data *shareddomain.Apps) (err error)
	SaveAppsPermission(ctx context.Context, appID string, permissions domain.PermissionRequest) (err error)
	GetAllPermissions(ctx context.Context, filter domain.FilterPermission) (data []domain.Permission, meta candishared.Meta, err error)
	GetAllUserPermissions(ctx context.Context, appsID, userID string) (data []shareddomain.Permission, err error)
	GetUserApps(ctx context.Context, userID string) (data []domain.UserApps, err error)
}
