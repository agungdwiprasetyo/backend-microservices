// Code generated by candi v1.3.3.

package usecase

import (
	"context"

	"monorepo/services/order-service/pkg/shared/repository"

	"pkg.agungdp.dev/candi/codebase/factory/dependency"
	"pkg.agungdp.dev/candi/codebase/interfaces"
	"pkg.agungdp.dev/candi/tracer"
)

type orderUsecaseImpl struct {
	cache interfaces.Cache

	repoMongo *repository.RepoMongo
}

// NewOrderUsecase usecase impl constructor
func NewOrderUsecase(deps dependency.Dependency) OrderUsecase {
	return &orderUsecaseImpl{
		cache: deps.GetRedisPool().Cache(),

		repoMongo: repository.GetSharedRepoMongo(),
	}
}

func (uc *orderUsecaseImpl) Hello(ctx context.Context) (msg string) {
	trace := tracer.StartTrace(ctx, "OrderUsecase:Hello")
	defer trace.Finish()
	ctx = trace.Context()

	msg, _ = uc.repoMongo.OrderRepo.FindHello(ctx)
	return
}
