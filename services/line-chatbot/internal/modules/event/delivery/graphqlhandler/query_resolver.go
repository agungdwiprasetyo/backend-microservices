// Code generated by candi v1.3.1.

package graphqlhandler

import (
	"context"

	"pkg.agungdwiprasetyo.com/candi/candishared"
)

type queryResolver struct {
	root *GraphQLHandler
}

// Hello resolver
func (q *queryResolver) GetAll(ctx context.Context, input struct{ Filter *candishared.Filter }) (*EventListResolver, error) {
	if input.Filter == nil {
		input.Filter = &candishared.Filter{
			Page: 1, Limit: 10,
		}
	}
	events, meta, err := q.root.uc.FindAll(ctx, input.Filter)
	if err != nil {
		return nil, err
	}

	var eventResolvers []*EventResolver
	for _, event := range events {
		eventResolvers = append(eventResolvers, &EventResolver{
			e: event,
			message: EventMessage{
				e: event,
			},
		})
	}

	resolvers := EventListResolver{
		m:      meta,
		events: eventResolvers,
	}
	return &resolvers, nil
}
